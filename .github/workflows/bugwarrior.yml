---
name: bugwarrior

on: [push, pull_request]

jobs:
  bugwarrior-test:
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        python-version: [3.6, 3.7, 3.8, 3.9]
        jira-version: [1.0.10, 2.0.0]
        architecture: [aarch64, ppc64le]

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Set Jira version ${{ matrix.jira-version }}
        run: echo "JIRAVERSION=${{ matrix.jira-version }}" >> $GITHUB_ENV
      - name: Run tests on given architecture
        uses: uraimo/run-on-arch-action@v2.0.7
        with:
          arch: ${{ matrix.architecture }}
          distro: ubuntu20.04
          install: |
            apt-get update -qq

            # ppc64le lacks the rust compiler needed to install cryptography
            # We can probably remove this once the pp64le image is updated.
            apt-get install -qq -y curl
            curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y
            source $HOME/.cargo/env

            apt-get install -qq -y \
              libffi-dev libssl-dev pandoc python3-pip taskwarrior
            task --version
            pip3 install --upgrade pip
            pip install taskw
            pip install responses
            pip install PySimpleSOAP
            pip install phabricator
            pip install codecov
            pip install pytest-cov
          run: |
            source $HOME/.cargo/env
            pip3 install .[jira,megaplan,activecollab,bts,bugzilla,trac,gmail,kanboard]
            pytest --cov=bugwarrior --cov-branch tests
      - name: Coverage
        uses: codecov/codecov-action@v1
        with:
          file: ./.coverage
        # Fragile way to only run codecov once.
        # See https://github.com/codecov/codecov-action/issues/40.
        if: |
          matrix.python-version == 3.8 &&
          matrix.jira-version == '2.0.0' &&
          matrix.architecture == 'aarch64'
